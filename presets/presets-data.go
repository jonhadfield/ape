// Code generated by go-bindata.
// sources:
// presets-files/aws-trusted-advisor/playbook.yml
// presets-files/aws-trusted-advisor/policies.yml
// presets-files/cis-foundations/playbook.yml
// presets-files/cis-foundations/policies.yml
// presets-files/kms/playbook.yml
// presets-files/kms/policies.yml
// DO NOT EDIT!

package presets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _presetsFilesAwsTrustedAdvisorPlaybookYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x94\xcf\x6f\xd3\x4e\x10\xc5\xef\xf9\x2b\x9e\x92\xb3\xfb\x3d\x54\xdf\x4b\x6e\x49\x48\x10\x22\x11\x96\x97\x0a\xae\xdb\xf5\x90\xae\x6a\xef\x58\x33\x63\x8a\xf9\xeb\x91\x9b\xfe\x70\x0b\x08\x36\xc8\x97\xb5\xf5\xde\x67\xe4\x79\xcf\x2e\x8a\x62\xd6\x71\x13\x43\x24\x5d\xe2\xe2\xbf\xc7\xf3\xc5\xd0\x36\xb3\xd9\x62\xd6\x35\x7e\xd0\xe5\x0c\x40\x81\xe4\x5b\x5a\x62\xbe\x5d\x3b\x74\xfd\x75\x13\x03\x34\xf9\x4e\x6f\xd8\x74\x3e\x2a\x80\x27\xd2\xe9\x76\x34\xcd\x1f\xa4\x74\xad\x53\xf9\x62\x4a\x5c\xb5\xfe\x3b\x27\x54\x6f\x1c\xca\x93\xda\xbd\x54\x4e\xc9\x8b\x67\xf4\xef\x31\x8e\x42\x2f\xd1\x06\xbc\x15\xee\x3b\xac\x42\x20\x55\x54\x51\x6f\xcf\x01\x72\x6f\x84\xff\x2f\x71\xf8\x8c\x8a\x94\x7b\x09\x84\x8a\x02\x4b\x0d\x47\xa6\xf0\x69\x3c\xa4\x9a\x04\xe5\x88\x1d\xb0\x13\xdf\xd2\x1d\xcb\x39\xe3\xdc\x25\xd6\x7d\xb8\x25\x43\x49\xd2\x46\xd5\xc8\x29\x6f\x0f\x9f\x1c\x36\x0d\xf7\xf5\x47\xf1\xb1\xc1\x9e\x8f\xc7\x98\x8e\x39\x84\x7b\xf7\x4e\x38\x19\x36\xbd\x1a\xb7\x70\x6e\x8f\x0d\x89\xc5\x2f\x31\x78\x23\x45\x4c\xb0\x1b\xc2\xbb\xd5\x61\xfa\x1c\xce\x58\xe8\xcc\x51\xaf\x66\x80\x4f\x23\x3e\x48\x3c\xc6\x04\x47\xf2\x95\x24\x07\xbd\xdd\xaf\xb1\x8f\x6a\x94\x48\x9e\x1a\x91\x0b\x78\xd9\xa4\xac\x1c\xb6\xdf\x3a\x56\xaa\x1f\xdb\xf7\x9e\x86\x2c\xfb\xb8\xda\x67\x2b\x2a\x36\x6f\x91\x53\x2e\xa2\xf4\xaa\x77\x63\x55\x4f\xd5\xcc\xb5\x5f\x69\x56\x9c\xbf\xfe\x39\xfc\xbd\xff\xb0\x5b\xe1\xfe\x93\x63\x1b\x5f\x9e\xfb\x64\x39\xf6\x57\x69\xa1\x80\xeb\x28\x8c\x85\x42\xc9\x62\x8a\xab\x24\xa4\x26\x31\x18\xd5\xff\x06\x9e\x92\x1e\x72\xfa\x13\xf0\xa7\xeb\x47\x00\x00\x00\xff\xff\x58\x9e\x95\xdd\x7e\x05\x00\x00")

func presetsFilesAwsTrustedAdvisorPlaybookYmlBytes() ([]byte, error) {
	return bindataRead(
		_presetsFilesAwsTrustedAdvisorPlaybookYml,
		"presets-files/aws-trusted-advisor/playbook.yml",
	)
}

func presetsFilesAwsTrustedAdvisorPlaybookYml() (*asset, error) {
	bytes, err := presetsFilesAwsTrustedAdvisorPlaybookYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "presets-files/aws-trusted-advisor/playbook.yml", size: 1406, mode: os.FileMode(420), modTime: time.Unix(1548615325, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _presetsFilesAwsTrustedAdvisorPoliciesYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\x8e\x41\x0a\x03\x21\x0c\x45\xf7\x9e\xe2\xe3\xde\x4d\x97\x39\x45\xa1\x27\x70\x42\x4a\x03\x56\x25\xd1\x81\xde\xbe\xe8\xcc\xdf\x3e\x1e\xef\xa7\x94\x42\x6f\x45\x59\xc5\x29\x00\x09\x35\x7f\x85\x10\xfb\x3c\x8a\x32\xe4\x70\x78\xcd\xdd\x3f\x6d\x78\x0c\x00\xe0\x72\x8a\xe9\xf8\x11\x22\x9b\x0e\xe5\x5c\x2e\x60\xe2\x6d\x1a\x0b\x41\xf8\x41\xaf\xdb\xda\xe8\xad\x65\x88\xed\xc2\x5a\xc2\x32\xc5\xb4\x55\xc2\x73\x97\x6e\x02\x9c\xb9\xcc\x75\x60\xd8\x94\x18\xfe\x01\x00\x00\xff\xff\xf1\x60\x90\x1f\xa0\x00\x00\x00")

func presetsFilesAwsTrustedAdvisorPoliciesYmlBytes() ([]byte, error) {
	return bindataRead(
		_presetsFilesAwsTrustedAdvisorPoliciesYml,
		"presets-files/aws-trusted-advisor/policies.yml",
	)
}

func presetsFilesAwsTrustedAdvisorPoliciesYml() (*asset, error) {
	bytes, err := presetsFilesAwsTrustedAdvisorPoliciesYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "presets-files/aws-trusted-advisor/policies.yml", size: 160, mode: os.FileMode(420), modTime: time.Unix(1548626184, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _presetsFilesCisFoundationsPlaybookYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x58\x4d\x6f\xdb\x48\x0c\xbd\xe7\x57\x10\x3e\xb5\x05\x92\xc6\x71\x77\xb7\xc9\xcd\xf0\xa2\x40\xd0\xb8\x08\x90\xa2\xbd\xf4\x42\x8f\x28\x69\x90\xd1\x8c\x76\x3e\xe2\x6a\x7f\xfd\x82\x23\xc5\x5f\x1d\x2b\xd3\x24\x58\x14\x28\x62\x79\xc4\xc7\x21\x1f\x1f\x49\x9f\x9e\x9e\x9e\xb4\x46\x49\x21\xc9\x5d\xc1\xd9\xfb\xc7\xbf\xcf\xba\x46\x9d\x9c\xb4\x0a\x3b\x77\x75\x02\x00\xa7\xa0\xb1\xa1\x2b\x98\x2c\xae\xef\x60\x7a\x36\x9d\xf0\x43\x80\xcd\xab\xfd\x47\x3e\x37\xb1\x24\x48\x7b\xb0\xc6\x78\x68\xd1\xb9\xb5\xb1\x05\x04\x87\x15\x4d\x8e\x9c\x42\x21\xc8\x39\xb8\xa7\x6e\xe7\xdc\x01\xe2\xc5\x08\x62\x70\x64\x1d\xac\xa5\xaf\xb7\x80\xa8\x8b\xf8\xc4\x04\x0f\xcb\x4f\xf3\x94\xc9\xd9\x6f\x9a\xd4\xc6\x43\x70\x54\x80\xd4\x70\x79\x0e\x05\x76\x6e\x92\x7e\x05\x85\x97\x0f\xb4\x7b\xaf\x63\xef\x1e\xb8\xf4\x61\xc4\x25\xd2\x2e\xd8\x5d\xa3\x0e\xd0\x12\x58\xe3\xd1\x53\x01\xf4\x40\xb6\x1b\xb3\xfd\xc7\xd3\xb6\xaf\xe7\xcb\xed\x75\xe3\xb9\x0e\x2c\xfd\x13\xa4\x25\x07\xe8\x41\x11\x3a\x0f\x46\x13\x84\xb6\x25\x2b\xd0\x11\x28\xf2\x9e\x6c\x0a\xf0\xcf\x17\x01\xee\xe3\x29\xb3\x7e\x12\xef\xaf\x57\xc4\x73\x5d\xb3\x32\x2a\x85\xf2\xf1\x15\x51\x74\x68\x56\xe9\xbb\x5c\xbe\x30\x59\x8d\xd4\xb2\x09\x0d\x28\xd2\x95\xaf\xc1\x94\x30\xfd\x00\xc6\x42\x65\x09\x8f\x84\x6f\x7a\xfe\x3c\xcc\xd6\xd2\x03\x69\xef\xb6\x5f\x58\x0a\x2e\x59\xc4\xd3\x31\xdd\x18\x81\xa0\x9f\x6d\xbc\xd5\xe3\xf3\xbe\xcc\xb6\xa5\xc4\x37\x53\xe4\x92\xb4\x9f\x8e\x29\xc7\x80\xa9\xcd\x46\x88\x4c\xd0\x7b\x82\x44\x3f\xa5\xf3\x69\xc3\x63\xfa\x31\x18\x5e\x7e\x9a\x83\x74\x40\x1a\x57\x8a\x0a\x28\x8d\x05\x5f\xd3\x1e\x58\xd2\x74\x86\x0e\xd4\x68\x8b\x35\xbe\x00\x23\xb7\x3c\x87\xaf\xa3\xd8\xa0\xf7\x28\x6a\x2a\xc0\x68\xd5\x81\x37\x50\x59\x13\xda\x18\x7f\x6b\x14\x39\x78\x73\xad\x95\xd4\xf4\xf6\x7f\x44\x9c\x0f\x27\xd2\x98\x99\xe5\xba\x44\xe7\xa9\x37\xc9\xc1\xec\x05\xfc\x65\x06\x35\x56\x59\x16\x2f\x32\x08\x8a\xe0\x42\xdb\x1a\xeb\x7b\x7b\x35\x3a\x58\x11\x69\x10\xb1\x9c\x0b\x8e\x4b\x13\x01\x41\x6a\x21\x8b\x58\x8e\xb1\x13\xcd\xbf\xdf\xc1\x5d\xff\x6a\x12\x7b\x8c\xc3\x7f\x9b\xd8\xb6\x1c\xf9\xd0\xee\xb5\x9d\x22\x58\xa9\x2b\x90\x5a\x7a\x89\x8a\xfb\x9a\x1d\x4e\x31\xf9\x50\xa9\x18\x81\xbe\x1f\xfa\x1a\x3d\xd4\xc8\xdd\x10\x84\xd1\x8e\xdd\x7f\x2c\xe3\xa4\x47\x19\xd4\xdf\x23\x49\x04\x40\xa5\xcc\x1a\xca\xa0\x14\xfc\x98\xbc\xbb\x7a\xf7\x63\x02\x58\xb0\x06\x3a\x6f\x31\xf6\xe2\xd6\xca\x07\xa9\xa8\x1a\x68\xc5\x17\x1b\x82\xf7\xab\x17\x17\xa3\xf3\xcd\xe0\xc4\x42\x99\x50\x7c\xb5\x28\xd5\x6e\xf5\x49\x1d\xef\x6f\xa9\x92\x46\x27\x64\xe3\x62\x74\x90\xf9\xd5\xb4\x32\x15\x94\x52\x11\x3c\xa0\x92\x05\x7a\x69\xf4\x0e\x5c\xca\x7e\x86\x2a\xb1\x3c\xdc\xcd\x60\x15\xc4\x3d\xf9\x03\x34\xc7\x5c\x92\x2e\x06\xa8\x0d\x2b\x25\x85\xea\x86\xe4\xcb\x95\x4a\x10\xf8\x22\x67\x68\xd9\xc1\xf0\xfc\x7f\x9f\x04\xa9\x3d\x55\x36\x12\x38\x92\x35\x9e\xfa\x8e\x5e\xd4\x70\x63\xaa\x64\xf4\x32\x86\x18\xa6\xfc\xc2\xe8\x52\x56\xc7\x13\x03\x6f\xfa\x0f\xce\x04\x2b\x08\xbe\x76\x2d\xb9\xb7\x93\xe7\xda\xaa\x94\x59\xe1\x8e\x39\xff\x32\x73\x6e\x93\x9a\x82\x4a\xa9\x1f\x95\xed\x59\xa6\x34\xe7\xb3\x95\x62\xdf\xd4\x41\x50\x33\x74\x79\x4b\x97\x41\x08\x94\xa9\xaa\x28\x02\x5b\x70\xa3\x23\xb3\x76\x72\xbd\x79\x2b\x85\x9a\x31\xae\x1d\x52\x93\x49\x43\x5a\xd8\xae\x65\xce\xa0\xe7\x90\xf3\x5c\xcd\x8e\x7c\x5e\xde\xc1\x62\xf9\x39\xc9\x9a\x0c\xcd\x8e\x63\x34\x57\x17\x4b\x98\x08\xce\x9b\x86\xec\x46\x5f\xd9\xf0\x68\xdd\xcd\x72\x24\x03\x63\x39\x37\xe4\xad\x14\x5c\xd5\xdc\x71\x78\x4f\x41\x85\xb6\xe9\x27\x8d\x08\x1f\x34\x06\x5f\x1b\x2b\xff\xa5\x02\xe6\xb7\xd7\x20\x50\xa9\xc4\xc5\x66\x39\x62\x92\x0b\xda\x37\xac\x86\x97\xb2\xc5\xa0\xd3\x4e\x56\xfa\x54\xea\xf1\x3d\x6a\x96\xa3\x38\xd9\x37\xe7\xf5\x8f\xa7\xd5\xf1\xe9\x65\x96\xb5\x28\x65\x62\x6e\xba\x49\x07\xa2\x46\x5d\x51\x32\xd2\x19\xc2\x93\x0b\xb8\xc3\x6a\x11\x2b\x38\xd8\x9e\x7a\x23\xf0\x19\x25\x9a\x0b\xcf\xca\x91\x48\x36\x53\x8e\xb4\x97\x62\x28\x03\x94\x2a\xd8\xb4\x33\x19\x95\x9b\xeb\x4c\x21\x1d\xae\x14\xd7\xaf\xb1\xe0\x78\x8c\x0b\x2c\x25\x05\x29\x8a\x6e\x98\x32\x5d\x8c\x29\xb7\x32\xaa\x3c\xd7\xad\xad\xdc\x3d\xcd\x8c\x8c\x55\xed\x77\x52\x33\x88\x7a\x36\x33\x72\xd6\xb6\x5c\x7c\x47\x22\x58\xe9\xbb\x7e\xc8\x1e\x45\x7d\x45\xb9\x1b\x60\x78\xf0\xf8\x42\x7e\x6d\xec\x3d\xcc\xfb\x26\xb3\x30\xda\x5b\xa3\xe0\x86\x77\x30\x78\xf3\x65\xbe\xb8\x49\x34\xb0\x59\xd6\x8e\xf7\x0c\x6f\xf4\xe0\x4d\x85\x9e\xd6\xc9\x5f\x55\x66\x59\x5b\x60\x2e\xb4\x35\xc1\x13\x78\x6e\x31\xa3\xb1\x7f\x45\xf1\xfb\x76\xbb\x38\x0e\xf5\x21\xa7\xa9\x69\x73\x40\x1b\x37\x4c\xe3\x52\x57\x96\x93\x58\x5a\xd3\xc0\xf9\x59\xfc\xf7\xfe\x9c\xe3\x1a\x17\x99\x61\xed\x39\x00\xcc\x5b\xd6\x9f\x05\x38\x9b\x7d\xbc\x4c\x41\x1e\x4b\xe0\x16\x91\x83\x54\x32\x42\x62\xe8\x19\x26\xae\x6f\xb7\x8b\x64\x00\x33\x52\xc5\x33\x53\x41\x25\x06\xe5\x0f\x0b\xd0\x94\xc3\xcf\x7a\xec\x01\xcf\x3a\x56\x0a\x1f\xaf\xcb\x63\x74\x59\x4a\x31\x39\xf9\x2f\x00\x00\xff\xff\xdc\x5b\xf7\xe1\xc2\x15\x00\x00")

func presetsFilesCisFoundationsPlaybookYmlBytes() ([]byte, error) {
	return bindataRead(
		_presetsFilesCisFoundationsPlaybookYml,
		"presets-files/cis-foundations/playbook.yml",
	)
}

func presetsFilesCisFoundationsPlaybookYml() (*asset, error) {
	bytes, err := presetsFilesCisFoundationsPlaybookYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "presets-files/cis-foundations/playbook.yml", size: 5570, mode: os.FileMode(420), modTime: time.Unix(1548509295, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _presetsFilesCisFoundationsPoliciesYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x5a\x5d\x6f\xdb\x3a\xd2\xbe\xef\xaf\x18\xf8\xaa\x6f\x81\xbc\xa7\x6d\xce\xc5\xd6\xd8\xb3\x80\xd6\x69\x9a\xa0\x76\x6a\xd8\xf9\xb8\x39\x37\x34\x35\x96\x88\x52\xa4\x97\x43\xc6\xc7\xfb\xeb\x17\x24\xe5\x8f\xd8\x72\x2c\x3b\x52\xd2\xc5\xb6\x57\xb1\x44\xce\xf3\xcc\x0c\x67\x9e\x91\x74\x76\x76\xf6\x6e\xa6\xa5\xe0\x02\xa9\xfb\x0e\xe0\x0c\x14\x2b\xb0\x0b\x1d\x83\x1c\x95\x05\xa3\xb5\x85\x19\x23\x9a\x6b\x93\x82\x23\x96\x61\xe7\x1d\x00\x00\xe1\x23\x1a\x61\x17\x5d\xe8\x48\x3d\x8f\xbf\x19\x24\xed\x0c\xc7\x2e\x08\x56\x74\xef\x08\x4d\xf8\x79\x2a\xa4\x45\x13\xb6\xf7\xff\xce\x80\x1b\x61\xd1\x08\xad\xba\xe0\x6f\xba\x61\x05\x96\xd7\x00\xb8\x2e\x66\xcc\x08\xf2\x17\x3b\x7f\xfc\xd1\x59\x5d\x78\x64\xd2\x05\x60\x5a\xdb\x4e\xd5\x56\xc3\x12\x65\x9f\x91\xbd\x23\x4c\xab\xb7\xfc\xfb\x7a\x47\xa7\x84\xed\x42\xca\x16\xb4\x6d\xe4\xfc\xe3\xbb\x7d\xbe\x60\x9c\x23\x11\xfc\xc4\xc5\x1e\x6f\x14\x98\x0a\x57\xfc\x0a\x0e\x49\xb8\x15\x8f\x98\x04\xc0\xdf\x71\x41\x0d\x38\xe6\xcb\x53\xc7\x38\x42\x43\x30\x17\x36\x5f\xe7\x08\x53\x69\xf8\x45\x3b\x0b\x83\xcb\x64\xc7\x3f\x1e\xa0\xe0\x4c\x9e\xec\xa1\x2b\x46\x83\xcb\xe4\x02\x1f\x05\xc7\x1d\x67\x4c\x99\x24\xac\xf4\xc6\x15\xa3\x65\x86\xec\xac\xb2\xc6\x61\xe7\x20\x33\xa5\x2d\x38\xc2\x14\x84\x82\x2f\x1f\x83\x7f\x76\xd8\xe5\x22\xcb\x5f\xc2\xec\x00\xc4\x93\xd3\xfe\x1f\x2f\x8b\x2e\x0b\xa9\xb4\x99\xfc\x75\x9c\xf1\xc2\xa3\x70\x5c\xfe\x9e\xc2\x10\x15\x39\xb3\x49\x8b\x80\x19\x04\xa3\x2d\xb3\x98\x82\x67\xb2\x78\x4d\x76\xa3\x68\xb8\x71\x82\xd7\xc9\x60\x9d\xc6\xa1\xdc\x2f\xc0\xe0\xbf\x9c\x30\x48\xc0\x2c\x48\x64\x64\x41\x2b\x04\x37\x9b\xa1\xe1\x8c\x10\x24\x5a\x8b\xa6\x76\x82\x2f\xd3\x70\x18\x76\x3f\xc8\x7e\x14\xad\x27\xb6\xef\x4d\xff\x50\x78\xe7\x0d\xf7\x18\x61\x3f\xd8\xdd\x77\xb0\x8f\x23\xf7\x94\x9b\xd4\xf3\xe7\xb9\xed\x8f\xe8\x4b\xd9\xf5\xbd\xe9\x76\xd9\xd1\xa2\x98\x68\xf9\x8a\x9c\x6e\xb4\x4a\xe4\x2c\x67\xca\x15\x68\x04\xef\xe5\xcc\x30\xde\x12\x39\xe5\x8a\xc9\xab\x06\xec\x26\x18\x6c\x86\x0a\x41\x21\x94\x28\x5c\x01\x12\x55\x66\x73\xd0\x53\xf8\xf4\x3b\x68\x03\x99\x41\xd6\x6a\x22\x0e\xa2\xe1\x55\x8f\x08\xf6\x0f\xf6\xff\x92\xed\xa7\xdf\xeb\x12\x9d\x19\x7c\x44\x65\x69\x7d\xc1\xa0\xa3\x63\xb4\xd1\x91\xbc\x62\x78\x7e\x4c\x97\xcb\xe8\x56\x8f\xb0\xc0\x27\x31\x6b\x8c\x1d\xfe\x35\x0b\x51\x5c\xfe\x1e\x7b\xe2\xba\xef\xf9\x48\x4a\xa4\xfa\x62\xe0\x48\xb2\xcb\xdb\xbf\x7a\x1c\xcc\x0a\xad\x86\xfe\xca\xe1\x36\xf1\x6c\x4f\x50\x7a\x25\x68\xb5\x53\x4f\x84\x2d\xfe\x25\xc8\x36\xac\x6d\x1a\xd4\xb5\x57\x8c\xb6\x9a\x67\x0d\x41\x57\xb2\x1e\x5c\x26\x20\x08\x50\xb1\x89\xc4\x14\xa6\xda\x80\xcd\xf1\x89\x27\x9a\x57\xac\xcd\x72\x3f\x28\x7e\x2b\x68\xe7\xcc\xa4\x73\x76\x22\xff\x5f\x64\xbe\xbb\x62\x74\x55\xd2\x38\xc5\x05\xe1\x64\x97\x93\x6e\x50\x79\xcc\x5a\xc6\x73\x4c\x41\x2b\xb9\x00\xab\x21\x33\xda\xcd\xc2\x69\x36\x5a\x22\xc1\xfb\x6b\x25\x85\xc2\xff\x6b\x5a\xf9\x5d\x31\x8a\x3b\x0f\x4b\x38\xf5\xd3\xf7\x04\x12\x49\x79\x47\x1b\x34\x06\x4c\xb1\x0c\xd3\xd3\x78\x0c\x18\x59\x8c\x30\x7d\x4a\xc6\x11\xe3\x08\x90\x23\x2d\x63\xfc\x0b\x9d\x8a\xe9\xc2\x20\x39\x69\xbb\xe0\x5b\x91\x21\x3c\xdc\xf2\xb5\xc4\xfd\x99\xc9\xb5\xb2\x4c\x28\xda\xcd\xcf\x08\xfb\x19\x56\xde\x25\xff\x8d\xb4\x02\xee\x4a\x5e\x0c\xc8\xcd\x66\xda\xd8\xc8\x2a\x67\x04\x13\x44\x05\x3c\xc8\x97\xd4\xa7\x5d\x11\x96\x83\x50\x5c\xa4\x41\x09\x84\xb1\x31\x79\x18\xc3\x38\x2e\xad\x5b\x55\x5e\x48\x7f\x2b\x29\x17\xcb\xec\xaf\x76\x87\x50\x5b\x8e\x58\x6d\x1a\x37\xee\x30\xa3\xba\x6c\x4e\x67\xd6\x38\xb2\x98\x9e\xb1\xf4\x51\x90\x36\x5d\x8f\xb4\xf2\x42\x94\x0c\xbf\x25\x0f\xe3\x92\x77\xec\x51\x4f\xdd\x7a\xa1\xc3\xf8\x4c\x68\xdd\xec\xc9\xf0\x99\x3a\x23\x54\x06\x42\x09\x2b\x98\xf4\xf3\xb5\x29\xef\xf2\x85\x9a\x49\x19\x52\x2c\xce\xe5\x36\x67\x16\x72\xe6\xa7\x72\xe0\x5a\x91\x8f\xcc\x52\xa1\x34\x5a\xc2\x77\xdb\x6d\x2f\xc6\xfd\x41\xd8\x7c\xb5\xc3\xee\xb1\xaf\xde\xea\x4e\x39\xc2\xb4\x5e\xff\xae\xde\xe1\x88\xa7\x38\x55\x55\x33\xf8\x8d\x49\xa9\xe7\x30\x75\x52\xc2\x9f\x9d\x0f\xdd\x0f\x7f\x76\x80\xa5\x5e\xa5\x93\xf5\x0a\xeb\x11\x61\x66\xc4\xa3\x90\x98\x95\x75\xd6\xc7\xab\x4c\xf7\xfa\x32\xaf\x9e\xbc\xeb\xdc\xa3\x21\xa1\xb7\x53\xd1\xe7\x09\x4e\x99\x93\xd5\xdd\xb0\xf3\x75\x3a\x45\x6e\x77\x17\x25\x72\x15\xec\xed\x25\xa3\x12\xde\xee\xa2\x0f\xd5\x0b\x7c\x98\xaa\x80\x7d\xa8\x74\x73\x4f\x6a\x97\xde\x1a\x26\xe4\xa6\xc4\x10\x2a\x24\xae\xc1\x4c\x68\x55\x4f\x54\x72\xbf\x91\xf5\x1b\x75\xc3\x76\x87\x5d\x78\x4d\x03\x27\xad\x18\x05\x23\x61\xcd\x2e\xe8\xfd\xd2\x60\x03\xb8\xd4\x99\xb7\x84\x7e\x95\x48\x83\xd8\xde\x20\x53\xb3\x8c\x1f\x8f\xbf\xaf\xb3\x4b\x21\xf1\x7e\x65\xf4\xeb\xa6\xc1\x7a\x2c\xbc\x8e\x1b\x9f\xc3\xc4\xf1\x9f\x68\xb7\x38\x91\xaf\xd1\x82\x42\x1a\xcf\xdc\x44\x0a\x2e\x17\x65\xe5\x11\x13\xb9\xdb\x9e\x9a\x89\xca\x3f\x03\x94\x61\x69\x2f\xd9\x32\x57\xeb\xe8\x6e\xd0\x08\xa6\xe3\x69\x14\xca\x62\x66\x42\xef\x09\x7d\x26\xdc\xf5\xc0\x2c\xcf\xa1\xaf\xb3\xb6\x92\xac\xcf\x2c\x92\x5d\xdb\xf2\xa6\x2e\x50\x8a\x47\x34\x8b\x5b\x51\x6c\xd0\x3a\x30\x90\x7d\x5a\xfd\xb0\xf1\x20\xaf\x82\xbc\x6f\x9f\x3d\xad\xa6\x22\xdb\x7f\xa0\xe0\x7d\xfc\x23\xd2\x82\xdb\xc5\x0c\x69\x57\xea\x55\x3a\x20\xec\xdc\x1d\x21\xd7\x26\xad\xd1\x07\x7c\x65\x29\x9b\x1a\xa6\xcb\x52\x12\xec\x1d\x93\xa5\xf5\x38\x65\x52\x4f\xd8\x06\x2d\xdb\x22\xad\x6b\xc5\xa5\x4b\xf1\x5b\x30\xd9\x32\x2f\x5a\x9d\xcf\x14\xa7\x42\x55\xa9\xf2\x46\x38\x2d\xd3\xb2\x97\x33\xa5\x50\x8e\xcf\xe3\x51\xf4\xc2\xf0\x22\x1a\x6e\x81\x9b\xf2\x55\x66\x26\xf8\x2b\x73\x53\x74\xeb\xad\x26\xa3\x9b\x13\xa8\xad\x0b\x66\xa9\xc3\xa4\xce\xb2\xa0\xc1\xd6\x44\xb5\x0a\xb5\x75\xa3\x14\xad\x56\xb5\x5a\x38\xfb\x11\xca\x09\xad\x60\xbb\xf8\xfb\x9a\x89\x8a\x9b\xc5\xcc\x97\x4c\x66\x3d\x38\x0b\x8e\x3c\xd1\xef\x83\x31\xf4\x06\xdf\xeb\xbe\xdf\x38\xa9\xb7\xd1\xd7\xa5\xf1\x63\x58\x84\xd7\x30\xbe\x01\x7b\xf1\xcb\x1d\x59\x5d\xa0\x59\x0d\x1d\x1e\xf3\xf1\xad\xf9\x67\x41\xdd\xa5\xe0\x7c\x16\xf5\x77\x5c\x8c\x4a\xfb\x87\x02\x50\xb5\xbc\x57\xc2\x2d\x87\x91\x23\x3a\x9e\xd2\x40\xc8\x9d\x67\xb1\x1c\xe6\xa3\x5a\x15\x2a\x33\x3e\x43\xa7\x46\x17\xf0\xf1\xff\xc3\xff\xdf\x3e\xfa\xc6\x1e\x46\xb3\xcf\x9f\x6b\x25\x23\xf2\xcf\xdd\x71\xb9\xff\x37\xbf\x7d\x9d\x02\x19\x0c\x0f\x8d\xb6\x9a\x6b\xb9\xa7\xcd\x05\x90\x15\x25\xf3\xb6\x37\xac\x76\xd1\x72\xdb\xd5\x70\x58\x7b\xcb\x25\xd5\x3d\x3b\x5e\x0f\x8f\xdc\x6f\xe5\xcc\x46\x03\x72\x7e\xfe\xb7\x2f\xff\x33\x21\x59\x93\x7d\x9d\xa0\xdc\x0f\x7b\x30\xf5\x41\xa8\xa8\xd7\x65\x63\xba\x1f\xf6\xea\x16\x35\x1f\x81\xfb\x19\x3f\xec\xf7\x2b\x46\x65\x35\xb8\x94\x7a\xde\xd7\xd9\xb1\x02\x3d\x8d\x23\xdd\x56\x46\x81\x9e\x96\x2f\x9b\x3d\x2f\x5f\x9c\x8d\xe0\x36\xe4\x99\x97\xbd\xd3\xa9\xe0\x47\x30\x39\x32\x97\xc2\x6d\x5e\x19\xec\x09\x50\xd5\x43\xda\xf4\xb9\xc9\xf4\x8a\x51\xa2\x16\x23\x27\xab\x14\xd4\x6e\xdd\xe3\x39\xf2\x9f\xa1\xc6\xc7\x9e\xba\xfc\xec\x22\x8c\x0d\x65\x5b\xae\xfd\x4c\x9e\xce\xbb\xb1\x79\xd6\x92\xb3\x7a\x4e\x71\x3a\x49\x36\xac\x3c\x8f\x76\xf5\x48\xcc\x4f\x8a\x05\xfa\x40\x95\x66\xc2\x97\x2f\x4c\x32\x53\xc4\x17\x28\x81\x92\x53\xcc\xd9\x5c\x1b\xf1\x6f\x4c\x21\x19\x5e\x03\x67\x52\xb6\xd7\x6b\xbd\xeb\x3d\x82\x07\x61\xf3\xb1\x9b\x10\x37\x62\x82\xe6\x52\x9b\xbb\x0d\x1c\xc9\xf0\xba\xb7\x46\x51\x2f\x77\xeb\xf2\x8d\xfd\xae\x40\x65\xbd\x62\x0c\x0f\xa5\x48\x64\xea\x4c\xa8\x67\x3f\x0a\x6a\x9d\x7f\x09\x66\x2c\x32\x75\xad\xe8\x21\x42\x59\x21\x69\xd6\x07\xe1\xbb\x30\x7f\xa4\x9f\x7d\xab\xd2\x3a\xe5\x91\xd6\x36\x89\xc6\xef\xd6\x5f\xaa\x35\x4b\x75\xf5\x64\x6d\x01\x3c\x67\x2a\xc3\x37\x48\xed\xeb\x64\x10\x9f\xb4\xf5\x36\x11\x34\xcb\x73\x43\x50\xc7\x79\xc5\xc5\x17\xb1\x6f\xc7\x7a\x8d\x28\x4e\x66\x2d\x92\xf7\xe3\x5f\xc5\xb9\xf6\x05\x05\x95\xaf\xc2\x51\xa4\x33\x21\x9d\x79\x0b\x57\x24\x0f\xe3\x12\x53\xe2\x6c\x7e\xf9\x04\x47\xb3\x9e\x48\x05\xb1\x89\xf4\x72\x43\x1b\x20\x9e\x63\xea\xbc\xe0\x48\x51\x62\xf0\x81\x9e\x56\xcf\x29\xaf\xef\x93\x8b\x25\xd2\x1f\x66\xbc\xc4\x79\x51\xc2\xfc\x31\xed\x0d\xbe\xb7\xe1\x9e\xf5\x30\xfd\xd6\x35\x61\xf9\xc0\xa3\xf5\xc2\xb0\xf1\x68\xe4\x57\x29\x0c\x6d\x97\x83\x2d\xe9\xfa\x76\x31\x46\x1e\xa4\x6b\x8b\x54\x4b\x6e\x7e\xa4\xbb\x41\x3b\xd7\xe6\x27\x44\xa5\xe8\x63\x6e\x8d\x96\xd0\x17\x64\x09\xde\xdf\x24\xbd\x7e\xdd\x17\xec\x0d\xba\xc0\x9b\x7d\x1d\xfa\xaa\xa4\x9f\x31\x8b\xf3\xfa\x5f\xc3\x36\xc9\x35\x22\xf8\x16\x01\xb4\xc8\xda\x68\x67\x11\xac\x9f\xf2\xde\x2e\xb9\x47\x1e\xc4\xad\xc7\xd0\x22\x53\x3f\x6c\xbe\x19\xc3\xfb\x61\xef\x10\xb5\xff\x04\x00\x00\xff\xff\xcf\x77\x9b\x1b\x9d\x32\x00\x00")

func presetsFilesCisFoundationsPoliciesYmlBytes() ([]byte, error) {
	return bindataRead(
		_presetsFilesCisFoundationsPoliciesYml,
		"presets-files/cis-foundations/policies.yml",
	)
}

func presetsFilesCisFoundationsPoliciesYml() (*asset, error) {
	bytes, err := presetsFilesCisFoundationsPoliciesYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "presets-files/cis-foundations/policies.yml", size: 12957, mode: os.FileMode(420), modTime: time.Unix(1548615024, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _presetsFilesKmsPlaybookYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcb\x31\x0e\xc3\x20\x14\x03\xd0\x9d\x53\x58\xec\xa4\x3b\x6b\xc6\x28\x4b\x6f\x40\x89\x2b\x21\x01\x3f\xfa\x9f\x0c\xb9\x7d\x15\xb5\xcd\x66\xcb\xcf\x21\x04\xb7\x4b\x2d\xb9\xd0\x22\xa6\xc7\x3f\x4f\x67\xab\xce\xed\x35\x9d\x16\x1d\x80\x80\x9e\x1a\x23\xfc\xbc\x2e\x78\xca\x48\xa3\x48\xf7\xd7\x02\xdc\xff\x6f\xbd\xb0\x67\xb7\x43\x09\xfd\x49\xbc\x45\x91\x0f\x1b\xd2\xa8\xc8\xca\x34\xb8\x61\x5e\x17\x43\x31\xb0\xa7\x57\xe5\xe6\x3f\x01\x00\x00\xff\xff\x3a\x5c\x69\xfc\x8d\x00\x00\x00")

func presetsFilesKmsPlaybookYmlBytes() ([]byte, error) {
	return bindataRead(
		_presetsFilesKmsPlaybookYml,
		"presets-files/kms/playbook.yml",
	)
}

func presetsFilesKmsPlaybookYml() (*asset, error) {
	bytes, err := presetsFilesKmsPlaybookYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "presets-files/kms/playbook.yml", size: 141, mode: os.FileMode(420), modTime: time.Unix(1548509295, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _presetsFilesKmsPoliciesYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x3b\x6a\x03\x41\x10\x44\xf3\x3d\x45\x31\xf9\x5e\x60\x52\xe1\x68\x51\xe2\x1b\xb4\x67\x6b\x4d\xe3\xf9\x98\xee\x1e\xc1\xde\xde\x48\x56\x60\xb0\xd2\x82\x57\xef\xad\xeb\xba\x7c\x8f\xaa\x45\xe9\x79\x01\x56\x74\x69\xcc\x48\xec\x3e\x8d\xb0\x11\x12\x3a\x3a\x8e\x61\x28\xd3\x63\x34\x1a\x8a\x51\x82\x3b\x2e\xd7\xcd\xa1\x0e\x76\xf9\xa8\xdc\xd3\x02\x00\xce\x1b\x4d\xe3\xcc\x48\x8d\xbb\xce\xf6\x3b\x1b\x7d\x4c\x2b\xcc\xf8\x6a\x9e\x37\x9e\x8f\xf5\xd0\x1a\xb4\x87\xfa\x2e\x2f\xa6\x41\xd3\xd1\x33\xd2\xc6\xf3\xfd\x69\x7f\xfb\xfb\x0f\xdc\xa4\xce\x7b\xe3\x21\xd5\x99\x5e\xa0\x97\x67\xe8\x55\xba\x7c\xfe\xe7\xc2\x26\xd3\x4f\x00\x00\x00\xff\xff\xda\x19\xed\x21\xfa\x00\x00\x00")

func presetsFilesKmsPoliciesYmlBytes() ([]byte, error) {
	return bindataRead(
		_presetsFilesKmsPoliciesYml,
		"presets-files/kms/policies.yml",
	)
}

func presetsFilesKmsPoliciesYml() (*asset, error) {
	bytes, err := presetsFilesKmsPoliciesYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "presets-files/kms/policies.yml", size: 250, mode: os.FileMode(420), modTime: time.Unix(1548509295, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"presets-files/aws-trusted-advisor/playbook.yml": presetsFilesAwsTrustedAdvisorPlaybookYml,
	"presets-files/aws-trusted-advisor/policies.yml": presetsFilesAwsTrustedAdvisorPoliciesYml,
	"presets-files/cis-foundations/playbook.yml": presetsFilesCisFoundationsPlaybookYml,
	"presets-files/cis-foundations/policies.yml": presetsFilesCisFoundationsPoliciesYml,
	"presets-files/kms/playbook.yml": presetsFilesKmsPlaybookYml,
	"presets-files/kms/policies.yml": presetsFilesKmsPoliciesYml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"presets-files": &bintree{nil, map[string]*bintree{
		"aws-trusted-advisor": &bintree{nil, map[string]*bintree{
			"playbook.yml": &bintree{presetsFilesAwsTrustedAdvisorPlaybookYml, map[string]*bintree{}},
			"policies.yml": &bintree{presetsFilesAwsTrustedAdvisorPoliciesYml, map[string]*bintree{}},
		}},
		"cis-foundations": &bintree{nil, map[string]*bintree{
			"playbook.yml": &bintree{presetsFilesCisFoundationsPlaybookYml, map[string]*bintree{}},
			"policies.yml": &bintree{presetsFilesCisFoundationsPoliciesYml, map[string]*bintree{}},
		}},
		"kms": &bintree{nil, map[string]*bintree{
			"playbook.yml": &bintree{presetsFilesKmsPlaybookYml, map[string]*bintree{}},
			"policies.yml": &bintree{presetsFilesKmsPoliciesYml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

